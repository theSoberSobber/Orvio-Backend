<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Buy Credits - Orvio</title>
  <script src="https://sdk.cashfree.com/js/v3/cashfree.js"></script>
  <style>
    body {
      font-family: 'Helvetica Neue', Arial, sans-serif;
      line-height: 1.6;
      color: #333;
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
      background-color: #f5f5f5;
    }
    
    .header {
      text-align: center;
      margin-bottom: 30px;
      border-bottom: 1px solid #ddd;
      padding-bottom: 20px;
    }
    
    .header h1 {
      color: #2c3e50;
      margin-bottom: 10px;
    }
    
    .container {
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      padding: 30px;
    }
    
    .form-group {
      margin-bottom: 15px;
    }
    
    .form-group label {
      display: block;
      margin-bottom: 5px;
      font-weight: bold;
    }
    
    .form-group input {
      width: 100%;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 16px;
    }
    
    .calculator {
      background-color: #f9f9f9;
      border: 1px solid #e0e0e0;
      border-radius: 6px;
      padding: 15px;
      margin: 20px 0;
    }
    
    .calculator p {
      margin: 5px 0;
    }
    
    .calculator .total {
      font-weight: bold;
      color: #3498db;
      font-size: 18px;
      margin-top: 10px;
    }
    
    .btn {
      display: inline-block;
      background-color: #3498db;
      color: white;
      padding: 12px 24px;
      text-decoration: none;
      border-radius: 4px;
      font-weight: bold;
      transition: background-color 0.3s;
      border: none;
      cursor: pointer;
      font-size: 16px;
      width: 100%;
    }
    
    .btn:hover {
      background-color: #2980b9;
    }
    
    .btn:disabled {
      background-color: #a0a0a0;
      cursor: not-allowed;
    }
    
    .text-center {
      text-align: center;
    }
    
    .back-link {
      display: inline-block;
      margin-top: 20px;
      color: #3498db;
      text-decoration: none;
    }
    
    .back-link:hover {
      text-decoration: underline;
    }
    
    .error {
      color: #e74c3c;
      font-size: 14px;
      margin-top: 5px;
    }
  </style>
</head>
<body>
  <div class="header">
    <h1>Buy Credits</h1>
    <p>Purchase credits for OTP services</p>
  </div>
  
  <div class="container">
    <form id="buyCreditsForm">
      <div class="form-group">
        <label for="phoneNumber">Phone Number (with country code)</label>
        <input type="tel" id="phoneNumber" name="phoneNumber" placeholder="+911234567890" required>
        <div id="phoneError" class="error"></div>
      </div>
      
      <div class="form-group">
        <label for="credits">Number of Credits to Purchase</label>
        <input type="number" id="credits" name="credits" min="1" value="10" required>
        <div id="creditsError" class="error"></div>
      </div>
      
      <div class="calculator">
        <p>Cost per credit: ₹0.30</p>
        <p>Number of credits: <span id="creditCount">10</span></p>
        <p class="total">Total amount: ₹<span id="totalAmount">3.00</span></p>
      </div>
      
      <div id="userInfo" style="display: none;" class="calculator">
        <p>User ID: <span id="userId"></span></p>
        <p>Current credits: <span id="currentCredits"></span></p>
        <p>Current cashback points: <span id="currentCashback"></span></p>
      </div>
      
      <button type="submit" class="btn" id="submitBtn">Proceed to Payment</button>
    </form>
    
    <div class="text-center">
      <a href="/" class="back-link">← Back to home</a>
    </div>
  </div>
  
  <script>
    // Initialize Cashfree
    const cashfree = Cashfree({
      mode: "<%= process.env.NODE_ENV === 'production' ? 'production' : 'sandbox' %>"
    });

    document.addEventListener('DOMContentLoaded', function() {
      const creditsInput = document.getElementById('credits');
      const creditCount = document.getElementById('creditCount');
      const totalAmount = document.getElementById('totalAmount');
      const phoneInput = document.getElementById('phoneNumber');
      const phoneError = document.getElementById('phoneError');
      const creditsError = document.getElementById('creditsError');
      const userInfoDiv = document.getElementById('userInfo');
      const userId = document.getElementById('userId');
      const currentCredits = document.getElementById('currentCredits');
      const currentCashback = document.getElementById('currentCashback');
      
      // Update calculator on input change
      creditsInput.addEventListener('input', updateCalculator);
      
      function updateCalculator() {
        const credits = parseInt(creditsInput.value) || 0;
        const amount = (credits * 0.3).toFixed(2);
        
        creditCount.textContent = credits;
        totalAmount.textContent = amount;
        
        // Validate minimum credits
        if (credits < 1) {
          creditsError.textContent = 'Minimum 1 credit required';
        } else {
          creditsError.textContent = '';
        }
      }
      
      // Fetch user info when phone number is provided
      phoneInput.addEventListener('blur', async function() {
        const phoneNumber = phoneInput.value.trim();
        
        // Validate phone number format
        if (!phoneNumber.match(/^\+[0-9]{10,14}$/)) {
          phoneError.textContent = 'Invalid phone number format. Use format: +911234567890';
          userInfoDiv.style.display = 'none';
          return;
        }
        
        phoneError.textContent = '';
        
        try {
          const response = await fetch(`/api/user/${phoneNumber}`);
          
          if (!response.ok) {
            phoneError.textContent = 'User not found with this phone number';
            userInfoDiv.style.display = 'none';
            return;
          }
          
          const user = await response.json();
          userId.textContent = user.id;
          currentCredits.textContent = user.credits;
          currentCashback.textContent = user.cashbackPoints;
          userInfoDiv.style.display = 'block';
        } catch (error) {
          console.error('Error fetching user:', error);
          phoneError.textContent = 'Error fetching user information';
          userInfoDiv.style.display = 'none';
        }
      });
      
      // Form submission
      document.getElementById('buyCreditsForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const phoneNumber = phoneInput.value.trim();
        const credits = parseInt(creditsInput.value) || 0;
        const amount = (credits * 0.3).toFixed(2);
        
        // Validate inputs
        let isValid = true;
        
        if (!phoneNumber.match(/^\+[0-9]{10,14}$/)) {
          phoneError.textContent = 'Invalid phone number format. Use format: +911234567890';
          isValid = false;
        }
        
        if (credits < 1) {
          creditsError.textContent = 'Minimum 1 credit required';
          isValid = false;
        }
        
        if (!userId.textContent) {
          phoneError.textContent = 'User not found with this phone number';
          isValid = false;
        }
        
        if (!isValid) return;
        
        // Disable button during submission
        const submitBtn = document.getElementById('submitBtn');
        submitBtn.disabled = true;
        submitBtn.textContent = 'Processing...';
        
        try {
          const response = await fetch('/api/create-order', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              userId: userId.textContent,
              phoneNumber: phoneNumber,
              credits: credits,
              amount: amount
            })
          });
          
          if (!response.ok) {
            throw new Error('Failed to create order');
          }
          
          const orderData = await response.json();
          
          // Use Cashfree SDK to open checkout
          let checkoutOptions = {
            paymentSessionId: orderData.sessionId,
            redirectTarget: "_self" // Redirect to payment page
          };
          
          cashfree.checkout(checkoutOptions);
        } catch (error) {
          console.error('Error creating order:', error);
          alert('Failed to create payment order. Please try again.');
          
          // Re-enable button
          submitBtn.disabled = false;
          submitBtn.textContent = 'Proceed to Payment';
        }
      });
      
      // Initialize calculator
      updateCalculator();
    });
  </script>
</body>
</html> 